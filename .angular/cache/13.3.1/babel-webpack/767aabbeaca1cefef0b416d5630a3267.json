{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\USER\\\\OneDrive\\\\Desktop\\\\FTU Coin\\\\savjeecoin-frontend\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\Users\\\\USER\\\\OneDrive\\\\Desktop\\\\FTU Coin\\\\savjeecoin-frontend\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { Router } from '@angular/router';\nimport { BlockchainService } from '../../services/blockchain.service';\nimport { Transaction } from 'SavjeeCoin/src/blockchain';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/blockchain.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport var CreateTransactionComponent = /*#__PURE__*/(function () {\n  var CreateTransactionComponent = /*#__PURE__*/function () {\n    function CreateTransactionComponent(blockchainService, router) {\n      _classCallCheck(this, CreateTransactionComponent);\n\n      this.blockchainService = blockchainService;\n      this.router = router;\n      this.newTx = new Transaction();\n      this.newTx = new Transaction();\n      this.ownWalletKey = blockchainService.walletKeys[0];\n    }\n\n    _createClass(CreateTransactionComponent, [{\n      key: \"ngOnInit\",\n      value: function ngOnInit() {}\n    }, {\n      key: \"createTransaction\",\n      value: function createTransaction() {\n        var newTx = this.newTx; // Set the FROM address and sign the transaction\n\n        newTx.fromAddress = this.ownWalletKey.publicKey;\n        newTx.signTransaction(this.ownWalletKey.keyObj);\n\n        try {\n          this.blockchainService.addTransaction(this.newTx);\n        } catch (e) {\n          alert(e);\n          return;\n        }\n\n        this.router.navigate(['/new/transaction/pending', {\n          addedTx: true\n        }]);\n        this.newTx = new Transaction();\n      }\n    }]);\n\n    return CreateTransactionComponent;\n  }();\n\n  CreateTransactionComponent.ɵfac = function CreateTransactionComponent_Factory(t) {\n    return new (t || CreateTransactionComponent)(i0.ɵɵdirectiveInject(i1.BlockchainService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n\n  CreateTransactionComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreateTransactionComponent,\n    selectors: [[\"app-create-transaction\"]],\n    decls: 26,\n    vars: 3,\n    consts: [[1, \"container\"], [1, \"form-group\"], [\"for\", \"fromAddress\"], [\"type\", \"text\", \"id\", \"fromAddress\", \"aria-describedby\", \"fromAddressHelp\", \"disabled\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"id\", \"fromAddressHelp\", 1, \"form-text\", \"text-muted\"], [\"for\", \"toAddress\"], [\"type\", \"text\", \"id\", \"toAddress\", \"aria-describedby\", \"toAddressHelp\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"id\", \"toAddressHelp\", 1, \"form-text\", \"text-muted\"], [\"for\", \"amount\"], [\"type\", \"number\", \"id\", \"amount\", \"aria-describedby\", \"amountHelp\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"id\", \"amountHelp\", 1, \"form-text\", \"text-muted\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"click\"]],\n    template: function CreateTransactionComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n        i0.ɵɵtext(2, \"Create transaction\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"p\");\n        i0.ɵɵtext(4, \"Transfer some money to someone!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"br\");\n        i0.ɵɵelementStart(6, \"div\", 1)(7, \"label\", 2);\n        i0.ɵɵtext(8, \"From address\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"input\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function CreateTransactionComponent_Template_input_ngModelChange_9_listener($event) {\n          return ctx.ownWalletKey.publicKey = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"small\", 4);\n        i0.ɵɵtext(11, \" This is your wallet address. You cannot change it because you can only spend your own coins. \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(12, \"div\", 1)(13, \"label\", 5);\n        i0.ɵɵtext(14, \"To address\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"input\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function CreateTransactionComponent_Template_input_ngModelChange_15_listener($event) {\n          return ctx.newTx.toAddress = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"small\", 7);\n        i0.ɵɵtext(17, \" The address of the wallet where you want to send the money to. You can type random text here (if you are not interested in recovering the funds) \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(18, \"div\", 1)(19, \"label\", 8);\n        i0.ɵɵtext(20, \"Amount\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"input\", 9);\n        i0.ɵɵlistener(\"ngModelChange\", function CreateTransactionComponent_Template_input_ngModelChange_21_listener($event) {\n          return ctx.newTx.amount = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"small\", 10);\n        i0.ɵɵtext(23, \" You can transfer any amount. Account balance is not checked in this demo. Have at it! \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(24, \"button\", 11);\n        i0.ɵɵlistener(\"click\", function CreateTransactionComponent_Template_button_click_24_listener() {\n          return ctx.createTransaction();\n        });\n        i0.ɵɵtext(25, \"Sign & create transaction\");\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngModel\", ctx.ownWalletKey.publicKey);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.newTx.toAddress);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.newTx.amount);\n      }\n    },\n    directives: [i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel, i3.NumberValueAccessor],\n    styles: [\"\"]\n  });\n  return CreateTransactionComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}