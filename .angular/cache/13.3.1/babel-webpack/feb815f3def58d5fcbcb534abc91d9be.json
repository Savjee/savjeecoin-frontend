{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\USER\\\\OneDrive\\\\Desktop\\\\FTU Coin\\\\savjeecoin-frontend\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\Users\\\\USER\\\\OneDrive\\\\Desktop\\\\FTU Coin\\\\savjeecoin-frontend\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { BlockchainService } from '../../services/blockchain.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/blockchain.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../../components/block-view/block-view.component\";\nimport * as i4 from \"../../components/transactions-table/transactions-table.component\";\n\nfunction BlockchainViewerComponent_app_block_view_6_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"app-block-view\", 4);\n    i0.ɵɵlistener(\"click\", function BlockchainViewerComponent_app_block_view_6_Template_app_block_view_click_0_listener() {\n      var restoredCtx = i0.ɵɵrestoreView(_r3);\n      var block_r1 = restoredCtx.$implicit;\n      var ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.showTransactions(block_r1);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var block_r1 = ctx.$implicit;\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"block\", block_r1)(\"selectedBlock\", ctx_r0.selectedBlock);\n  }\n}\n\nexport var BlockchainViewerComponent = /*#__PURE__*/(function () {\n  var BlockchainViewerComponent = /*#__PURE__*/function () {\n    function BlockchainViewerComponent(blockchainService) {\n      _classCallCheck(this, BlockchainViewerComponent);\n\n      this.blockchainService = blockchainService;\n      this.blocks = [];\n      this.selectedBlock = null;\n      this.blocks = blockchainService.blockchainInstance.chain;\n      this.selectedBlock = this.blocks[0];\n      console.log(this.blocks);\n    }\n\n    _createClass(BlockchainViewerComponent, [{\n      key: \"ngOnInit\",\n      value: function ngOnInit() {}\n    }, {\n      key: \"showTransactions\",\n      value: function showTransactions(block) {\n        console.log(block);\n        this.selectedBlock = block;\n        return false;\n      }\n    }, {\n      key: \"blockHasTx\",\n      value: function blockHasTx(block) {\n        return block.transactions.length > 0;\n      }\n    }, {\n      key: \"selectedBlockHasTx\",\n      value: function selectedBlockHasTx() {\n        return this.blockHasTx(this.selectedBlock);\n      }\n    }, {\n      key: \"isSelectedBlock\",\n      value: function isSelectedBlock(block) {\n        return this.selectedBlock === block;\n      }\n    }, {\n      key: \"getBlockNumber\",\n      value: function getBlockNumber(block) {\n        return this.blocks.indexOf(block) + 1;\n      }\n    }]);\n\n    return BlockchainViewerComponent;\n  }();\n\n  BlockchainViewerComponent.ɵfac = function BlockchainViewerComponent_Factory(t) {\n    return new (t || BlockchainViewerComponent)(i0.ɵɵdirectiveInject(i1.BlockchainService));\n  };\n\n  BlockchainViewerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: BlockchainViewerComponent,\n    selectors: [[\"app-blockchain-viewer\"]],\n    decls: 13,\n    vars: 3,\n    consts: [[1, \"container\"], [1, \"container\", 2, \"overflow-x\", \"scroll\", \"white-space\", \"nowrap\"], [3, \"block\", \"selectedBlock\", \"click\", 4, \"ngFor\", \"ngForOf\"], [3, \"transactions\"], [3, \"block\", \"selectedBlock\", \"click\"]],\n    template: function BlockchainViewerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n        i0.ɵɵtext(2, \"Blocks on chain\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"p\");\n        i0.ɵɵtext(4, \"Each card represents a block on the chain. Click on a block to see the transactions stored inside.\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(5, \"div\", 1);\n        i0.ɵɵtemplate(6, BlockchainViewerComponent_app_block_view_6_Template, 1, 2, \"app-block-view\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"br\")(8, \"br\");\n        i0.ɵɵelementStart(9, \"div\", 0)(10, \"h1\");\n        i0.ɵɵtext(11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"app-transactions-table\", 3);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngForOf\", ctx.blocks);\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate1(\"Transactions inside block \", ctx.getBlockNumber(ctx.selectedBlock), \"\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"transactions\", ctx.selectedBlock.transactions);\n      }\n    },\n    directives: [i2.NgForOf, i3.BlockViewComponent, i4.TransactionsTableComponent],\n    styles: [\"\"]\n  });\n  return BlockchainViewerComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}