{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\USER\\\\OneDrive\\\\Desktop\\\\FTU Coin\\\\savjeecoin-frontend\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\Users\\\\USER\\\\OneDrive\\\\Desktop\\\\FTU Coin\\\\savjeecoin-frontend\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { connectableObservableDescriptor } from '../observable/ConnectableObservable';\nexport function multicast(subjectOrSubjectFactory, selector) {\n  return function multicastOperatorFunction(source) {\n    var subjectFactory;\n\n    if (typeof subjectOrSubjectFactory === 'function') {\n      subjectFactory = subjectOrSubjectFactory;\n    } else {\n      subjectFactory = function subjectFactory() {\n        return subjectOrSubjectFactory;\n      };\n    }\n\n    if (typeof selector === 'function') {\n      return source.lift(new MulticastOperator(subjectFactory, selector));\n    }\n\n    var connectable = Object.create(source, connectableObservableDescriptor);\n    connectable.source = source;\n    connectable.subjectFactory = subjectFactory;\n    return connectable;\n  };\n}\nexport var MulticastOperator = /*#__PURE__*/function () {\n  function MulticastOperator(subjectFactory, selector) {\n    _classCallCheck(this, MulticastOperator);\n\n    this.subjectFactory = subjectFactory;\n    this.selector = selector;\n  }\n\n  _createClass(MulticastOperator, [{\n    key: \"call\",\n    value: function call(subscriber, source) {\n      var selector = this.selector;\n      var subject = this.subjectFactory();\n      var subscription = selector(subject).subscribe(subscriber);\n      subscription.add(source.subscribe(subject));\n      return subscription;\n    }\n  }]);\n\n  return MulticastOperator;\n}(); //# sourceMappingURL=multicast.js.map","map":null,"metadata":{},"sourceType":"module"}